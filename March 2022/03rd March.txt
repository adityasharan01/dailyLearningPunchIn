An integer array is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.

For example, [1,3,5,7,9], [7,7,7,7], and [3,-1,-5,-9] are arithmetic sequences.
Given an integer array nums, return the number of arithmetic subarrays of nums.

A subarray is a contiguous subsequence of the array.
Example 1:
Input: nums = [1,2,3,4]
Output: 3
Explanation: We have 3 arithmetic slices in nums: [1, 2, 3], [2, 3, 4] and [1,2,3,4] itself.
Example 2:
Input: nums = [1]
Output: 0
Constraints:
1 <= nums.length <= 5000
-1000 <= nums[i] <= 1000


Solution:
class Solution {
   // TC : 0(n)
   // SC : 0(n)
    public int number0fArithmeticSlices(int[] A) {
       int[] dp = new int[A.length];
        int total = 0;
        for(int i=2;i<A.length;i++){
            if(Afi] - A[i-1] == A[i-1] - A[i-2]){
                dp[i] = dp[i-1]+1;
             } else{
                dp[i] = 0;
            }
            total += dp[i];
        }
        return total;
    }
   // TC: 0(n)
   // SC: 0(1)
